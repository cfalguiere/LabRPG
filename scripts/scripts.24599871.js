"use strict";angular.module("labrpgApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/game.html",controller:"GameCtrl",controllerAs:"game"}).when("/main",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).when("/player",{templateUrl:"views/player.html",controller:"PlayerCtrl",controllerAs:"player"}).when("/game",{templateUrl:"views/game.html",controller:"GameCtrl",controllerAs:"game"}).when("/labinfo",{templateUrl:"views/labinfo.html",controller:"LabinfoCtrl",controllerAs:"labinfo"}).otherwise({redirectTo:"/"})}]),angular.module("labrpgApp").controller("MainCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("labrpgApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("labrpgApp").controller("PlayerCtrl",["$scope",function(a){a.newPlayer="",a.players=["Alice","Bob"],a.addPlayer=function(){a.players.push(a.newPlayer),a.newPlayer=""}}]),angular.module("labrpgApp").controller("GameCtrl",["$scope","$location","Gameservice","Boardservice",function(a,b,c,d){c.reset(),a.board=c.getBoard(),a.completed=!1,a.visibleCells=d.getVisibleCells(),a.playCell=function(d){c.playCell(d),a.activeCell=c.getSelectedCell(),b.path("labinfo")},a.completeCell=function(b){c.completeCell(b),a.completed=c.isCompleted(),a.visibleCells=d.getVisibleCells()}}]),angular.module("labrpgApp").factory("CardFactory",["LabFactory",function(a){function b(a,b,c,d){this.id=a,this.shape=b,this.color=c,this.lab=d,this.completed=!1,this.reachable=!1,this.visible=!1}var c=1,d=a.map(function(a){return new b(c++,a.theme,"cyan",a)});return d.map(function(a){0===a.lab.follows.length&&(a.visible=!0)}),d}]),angular.module("labrpgApp").service("Boardservice",["CardFactory",function(a){function b(a,b){this.id=a,this.card=b,this.state="placed"}function c(a){var c=1,d=a.map(function(a){return new b(c++,a)});return d}function d(a){return g=a.reduce(function(a,b){var c=b.card.lab.id;return a[c]=b.id,a},{}),f=a}function e(a){var b=g[a]-1;return f[b]}var f,g;this.deal=function(){return d(c(a))},this.updateVisibleCells=function(){f.map(function(a){if(a.card.completed)a.card.visible=!0;else if(0===a.card.lab.follows.length)a.card.visible=!0;else{var b=a.card.lab.follows[0],c=g[b],d=f[c-1];d.card.completed?a.card.visible=!0:a.card.visible=!1}})},this.getCells=function(){return f},this.getVisibleCells=function(){return f.reduce(function(a,b){return b.card.visible&&a.push(b),a},[])},this.getCellAt=function(a){return f[a]},this.getCellById=function(a){return e(a)}}]),angular.module("labrpgApp").service("Gameservice",["Boardservice",function(a){var b=null,c=null;this.reset=function(){b=a.deal(),c=null},this.getBoard=function(){return b},this.getSelectedCell=function(){return c},this.playCell=function(a){null!==c&&(c.state="placed"),c=a,a.state="selected"},this.completeCell=function(b){var c=b.card.completed;b.card.completed=!c,a.updateVisibleCells()},this.isCompleted=function(){var a=b.reduce(function(a,b){return a&&b.card.completed},!0);return a}}]),angular.module("labrpgApp").filter("renderCard",function(){return function(a){return"glyphicon glyphicon-"+a.card.shape+" card card-"+a.state+" card-"+a.card.color}}),angular.module("labrpgApp").factory("LabFactory",function(){function a(a,b,c,d,e,f){this.id=a,this.ref=b,this.name=c,this.description=d,this.theme=e,this.follows=f,this.demoImage=null,this.getFolder=function(){return"/documents/labs/"+this.id},this.getCoverImage=function(){return this.getFolder()+"/cover.png"},this.getDemoImage=function(){return null!==this.demoImage?this.getFolder()+"/"+this.demoImage:null},this.getGuide=function(){return this.getFolder()+"/Guide.pdf"},this.getCircuit=function(){return this.getFolder()+"/SchemaCircuit.png"},this.getCode=function(){return null!==this.ref?this.getFolder()+"/"+this.ref+".zip":null}}var b="lamp",c="music",d=[];return d.push(new a("l1-lumiere",null,"Lumière !","Allumer une LED et comprendre comment marche le circuit",b,[])),d.push(new a("l2-feu-cli","FeuClignotant","Le feu clignotant","Faire clignoter la LED",b,["l1-lumiere"])),d.push(new a("l3-feu-pie","FeuPieton","Le feu piéton","Contrôler deux LEDs verte et rouge",b,["l2-feu-cli"])),d.push(new a("l4-feu-tri","FeuTricolore","Le feu de circulation","Faire un feu de circulation avec les 3 couleurs du feu voiture et les 2 couleurs du feu piéton",b,["l3-feu-pie"])),d.push(new a("l5-morse","EmetteurMorse","Emettre du Morse","Apprendre à utiliser les boutons poussoirs en faisant un émetteur Morse avec la LED",b,["l2-feu-cli"])),d.push(new a("l11-gui-noel","GuirlandeDeNoel","Guirlande de Noël","Apprendre à utiliser les boucles en faisant une guirlande de Noël",b,["l3-feu-pie"])),d.push(new a("l12-base2","Univac","Aux origines","Les premiers ordinateurs n'avaient pas d'écran. Ils affichaient les résultats des calculs en allumant des lampes.",b,["l11-gui-noel"])),d.push(new a("l13-gui-folle","GuirlandeFolle","La guirlande folle","On va se servir de l'affichage de nombre en binaire pour allumer les LEDs de la guirlande et faire des motifs.",b,["l12-base2"])),d.push(new a("l14-enseigne","EnseigneLumineuse","Enseigne lumineuse","On va reprendre la guirlande folle pour allumer les LEDs dans un certain ordre et faire une enseigne.",b,["l13-gui-folle"])),d.push(new a("m1-sirene","JouerUneNote","La sirène de pompier","Apprendre à utiliser le buzzer pour jouer un son",c,["l1-lumiere"])),d.push(new a("m2-morceau","JouerUnMorceau","Jouer un morceau","Jouer un morceau et apprendre à utiliser les tableaux",c,["m1-sirene"])),d.push(new a("m3-morse-s","EmetteurMorseSonore","Emetteur Morse Sonore","Apprendre à utiliser les boutons poussoirs en faisant un émetteur Morse sonore",c,["m2-morceau"])),d.push(new a("m4-theremine","Theremine","Le Thérémine","Un instrument de musique électronique où le son est contrôlé par la position des mains.",c,["m2-morceau"])),d.push(new a("p1-sos-morse","SOSMorse","SOS Morse","Tu es perdu et ton objectif est de construire un appareil qui émet le signal de détresse S.O.S. toutes les 20 secondes.",b,["l3-feu-pie"])),d}),angular.module("labrpgApp").filter("renderCompleted",function(){return function(a){var b="unchecked";return a.card.completed&&(b="check"),"glyphicon glyphicon-"+b+" card-green card-completed"}}),angular.module("labrpgApp").controller("LabinfoCtrl",["$scope","Gameservice",function(a,b){a.activeCell=b.getSelectedCell(),a.completeCell=function(c){b.completeCell(c),a.completed=b.isCompleted()}}]),angular.module("labrpgApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/game.html",'<div class="container-fluid"> <h2>Labs</h2> <div ng-show="completed"> <p class="wingame">Bravo !</p> </div> <!--\n    <div class="panel panel-default">\n       <div class="panel-body">\n--> <ul class="row"> <div class="col-xs-12 col-sm-6 col-md-4 col-lg-4" ng-repeat="cell in visibleCells"> <div class="cover"> <ul class="row banner"> <div class="col-xs-8 col-sm-8 col-md-8 col-lg-8"> <img src="{{ cell.card.lab.getCoverImage() }}" ng-click="playCell(cell)"> </div> <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4"> <ul class="row icons"> <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"> <span class="{{ cell | renderCard }}"></span> </div> <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"> <span class="{{ cell | renderCompleted }}" ng-click="completeCell(cell)"></span> </div> </ul> </div> </ul> <ul class="row title" ng-click="playCell(cell)"> <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"> <span>{{ cell.card.lab.name }} </span> </div> </ul> <ul class="row info" ng-click="playCell(cell)"> <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"> <span>{{ cell.card.lab.description }}</span> </div> </ul> </div> </div> </ul> <!--\n        </div>\n    </div>\n    --> <br> </div>'),a.put("views/labinfo.html",'<div class="container" ng-show="activeCell"> <div class="presentation"> <div class="banner"> <img style="float:right" src="{{ activeCell.card.lab.getCoverImage() }}"> <h2>{{ activeCell.card.lab.name }}</h2> <p> <span class="{{ activeCell | renderCard }}"></span> </p> <p> <span class="{{ activeCell | renderCompleted }}" ng-click="completeCell(activeCell)"></span> </p> </div> <div style="float:right" class="section" ng-show="{{ activeCell.card.lab.getDemoImage() != null }}"> <p class="title">Démo :</p> <center> <img width="300" src="{{ activeCell.card.lab.getDemoImage() }}"> </center> <p> </p> </div> <div class="section"> <p class="title">Objectif :</p> <p>{{ activeCell.card.lab.description }}</p> </div> <div class="section"> <p class="title">Instructions :</p> <p><a href="{{ activeCell.card.lab.getGuide() }}" target="{{ activeCell.card.lab.id }}">Ouvrir les instructions</a></p> </div> <div class="section" ng-show="{{ activeCell.card.lab.getCode() != null }}"> <p class="title">Programme :</p> <p><a href="{{ activeCell.card.lab.getCode() }}" download="{{ activeCell.card.lab.ref }}.zip">Télécharger le code</a></p> </div> <div class="section"> <p class="title">Montage :</p> <p><img src="{{ activeCell.card.lab.getCircuit() }}" width="300"></p> </div> <div class="section" style="clear: both;margin-top:3em"> <a href="#/game"><span class="glyphicon glyphicon-triangle-left"> Choisir un autre montage</span></a> </div> <!--\n        <div class="section">\n          <iframe width="100%" name="lab" ng-src="markdown/sample.html"></iframe>\n        </div>\n        --> </div> </div>'),a.put("views/main.html",'<div class="jumbotron"> <h1>\'Allo, \'Allo!</h1> <p class="lead"> <img src="images/yeoman.png" alt="I\'m Yeoman"><br> Always a pleasure scaffolding your apps. </p> <p><a class="btn btn-lg btn-success" ng-href="#/">Splendid!<span class="glyphicon glyphicon-ok"></span></a></p> </div> <div class="row marketing"> <h4>HTML5 Boilerplate</h4> <p> HTML5 Boilerplate is a professional front-end template for building fast, robust, and adaptable web apps or sites. </p> <h4>Angular</h4> <p> AngularJS is a toolset for building the framework most suited to your application development. </p> <h4>Karma</h4> <p>Spectacular Test Runner for JavaScript.</p> </div>'),a.put("views/player.html",'<div class="container"> <h2>Players</h2> <!-- Player input --> <form role="form" ng-submit="addPlayer()"> <div class="row"> <p class="input-group"> <input type="text" ng-model="newPlayer" placeholder="What is your name?" class="form-control"> <span class="input-group-btn"> <input type="submit" class="btn btn-primary" value="Add"> </span> </p> </div> </form> <!-- Players list --> <div class="row"> <ul ng-repeat="player in players"> <li>{{ player }}</li> </ul> </div> </div>')}]);